"""Module for pipelines."""
import sys
import os
from p_kit.core import PCircuit
from p_kit.solver.csd_solver import CaSuDaSolver
from p_kit.visualization import histplot, vin_vout,plot3d
import numpy as np
import matplotlib.pyplot as plt


#c = PCircuit(45)


"""
c.J = np.array([[0, -2, -1, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [-2, 0, -1, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0],
                [-1, -1, 0, 2, -1, -1, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-2,2,2,0,-2,2,2,0,-2,2,2,0,-2,2,2,0],
                [2, 2, 2, 0, -1, 0, 0, 0, -1, -1, 2, -1, -1, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, -1, -1, 0, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [-1, -1, -1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [2, 2, -1, 0, -1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],

                [0, 0, 0, -1, 0, 0, 0, 0, 0, -2, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, -1, 0, 0, 0, 0, -2, 0, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0],
                [0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, -1, 0, 0, 0, -1, -1, 2, -1, -1, -1, 2, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, -1, 0, 0, 0, 0, 2, 2, 0, -1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],

                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -2, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -2, 0, 2, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, -1, 0, 0, 0, -1, -1, 2, -1, -1, -1, 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 2, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 2, 2, 0, -1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],

                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -2, 2, 0, -1, 2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -2, 0, 2, 0, -1, 2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, -1, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 2, 2, 0, -1, 2, 0, 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],


                [0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0],
                [0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0,0,0,0,0],


                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0],
                [0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0],
                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0],
                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1,0,0,0,0],


                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0],
                [0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0],
                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1],
                [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-1],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0]])






#c.h = np.array([0,-2,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,-2,0,0,0,0,0,0,-2,0,0,0,0,0,0,3,-2,1,0,3,-2,1,0,3,-2,1,0,3,-2,1])
c.h = np.array([0,-2,3,0,0,0,0,3,0,-2,0,0,0,0,3,0,-2,0,0,0,0,3,0,-2,3,0,0,0,-3,0,3,-2,1,0,3,-2,1,0,3,-2,1,0,3,-2,1])
"""




c = PCircuit(33)

c.J = np.array(
[[0,0,0,0,0,0,3,-3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,-2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,-2,0,2,2,-2,2,2,0,0,-2,2,2,0,0,0,0,0,-2,2,2,0,0,0,0,0,-2,2,2,0,0,0,0],
[0,2,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,2,2,1,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,-2,2,-2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[3,0,2,0,0,2,0,1,-2,0,0,0,0,-2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[-3,0,2,0,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[2,0,0,0,0,0,-2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,-3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,-2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,2,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,2,0,0,0,0,0,0,0,2,1,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,-2,0,0,0,0,2,-2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,2,0,0,3,0,0,0,2,0,1,-2,0,0,0,0,-2,2,2,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,2,0,0,-3,0,0,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,2,0,0,0,0,-2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,-3,2,0,0,0,0,0,0,0,0],
[0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0],
[0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,-2,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,2,-2,0,2,2,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,0,0,0,2,0,1,-2,0,0,0,0,-2,2,2,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-3,0,0,0,2,1,0,2,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,-2,2,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,-3,2],
[0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0],
[0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0],
[0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,-2,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,2,-2,0,2,2,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,0,0,0,2,0,1,-2],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,-3,0,0,0,2,1,0,2],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,-2,2,0]])


#c.h = np.array([0,0,0,-3,-3,-2,0,0,0,0,0,-3,-3,-2,0,0,0,0,0,-3,-3,-2,0,0,0,0,0,-3,-3,-2,0,0,0])

c.h = np.array([0,-7,7,3,-3,-2,0,0,7,0,-7,3,-3,-2,0,0,7,0,-7,3,-3,-2,0,0,7,0,7,3,-3,-2,-7,0,7])


solver = CaSuDaSolver(Nt=75000, dt=0.1667, i0=0.5)

input, output = solver.solve(c)


#OUTPUT ARRAY IN FILE

current_dir = os.getcwd()
print("Current Directory:", current_dir)

# Output array to a file in the current directory
file_path = os.path.join(current_dir, 'output_4bit_ADD_SUB_SUB_test1.csv')

with open(file_path, 'w') as f:
    for element in output:
        f.write(str(element) + '\n')

print(f"Array data saved to {file_path}")


# Read data from the file
current_dir = os.getcwd()
file_path = os.path.join(current_dir, 'output_4bit_ADD_SUB_SUB_test1.csv')

with open(file_path, 'r') as f:
    lines = f.readlines()

# Combine every set of 5 lines
combined_lines = []
for i in range(0, len(lines), 2):
    combined_line = ' '.join(line.strip() for line in lines[i:i+2])
    combined_lines.append(combined_line)

# Write combined lines to a new file
combined_file_path = os.path.join(current_dir, 'combined_output_4bit_ADD_SUB_test1.csv')
with open(combined_file_path, 'w') as f:
    for line in combined_lines:
        f.write(line + '\n')

print(f"Combined data saved to {combined_file_path}")

'''
# Define the file name
file_name = 'output_4bit_ADD_SUB.txt'

# Get the current working directory
current_dir = os.getcwd()

# Construct the full file path
file_path = os.path.join(current_dir, file_name)

# Read the file and combine lines into arrays
combined_arrays = []

with open(file_path, 'r') as f:
    current_array = []
    for line in f:
        line = line.strip()
        if line:  # If the line is not empty
            current_array.append(line)
        if len(current_array) == 3:  # Assuming each array spans 3 lines
            combined_arrays.append(current_array)
            current_array = []

# Write the combined arrays to a new file
output_file_path = os.path.join(current_dir, 'combined_output_4bit_ADD_SUB.txt')

with open(output_file_path, 'w') as f:
    for array in combined_arrays:
        f.write('[' + ', '.join(array) + ']\n')

print(f"Combined array data saved to {output_file_path}")
'''